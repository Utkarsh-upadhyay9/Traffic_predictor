#############################################
# Minimal requirements for Render deployment #
# (No native builds / No Rust toolchain)     #
#############################################

# NOTE: Build was failing trying to compile pydantic-core (Rust/maturin)
# because the platform used Python 3.13 and fell back to source build.
# We avoid that entirely by pinning to FastAPI version that uses
# Pydantic v1 (pure Python, no pydantic-core dependency).

# FastAPI + Pydantic v2 stack (Python 3.12 has prebuilt pydantic-core wheels)
fastapi==0.111.0
pydantic==2.7.4
pydantic-core==2.18.3

# ASGI server (compatible)
uvicorn==0.30.1

# Env & HTTP utilities
python-dotenv==1.0.0
requests==2.31.0
python-dateutil==2.8.2

# (Intentionally no numpy / pandas / torch / scikit-learn)
# All ML functionality gracefully degrades to pattern-based logic.

# If later you restore DL models on a machine that supports wheels:
#   torch==2.1.2
#   scikit-learn==1.3.2
# Add ONLY when not on constrained build environments.

# End of file
